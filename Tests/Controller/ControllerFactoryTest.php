<?php

namespace ORM\Controller;

require_once '../ORMTest.php';

/**
 * Test class for ControllerFactory.
 * Generated by PHPUnit on 2011-12-02 at 12:29:56.
 */
class ControllerFactoryTest extends \ORM\Tests\ORMTest {

    /**
     * @var ControllerFactory $factory
     */
    protected $factory;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->factory = new ControllerFactory('\ORM\Tests\Mock\Controller');
    }

    /**
     * @covers {className}::{origMethodName}
     */
    public function testGet() {
        $controller = $this->factory->get( 'Cars' );
        $this->assertInstanceOf('\ORM\Tests\Mock\Controller\Cars', $controller);
    }

    /**
     * @covers {className}::{origMethodName}
     */
    public function testRegisterControllers() {
        $registered = $this->factory->registerControllers('\ORM\Tests\Mock\AlternateController');
        $this->assertEquals( '\ORM\Tests\Mock\AlternateController', $registered['alternatecontroller']);
        
    }
    
    public function testRegisterControllersWithPrefix() {
        $registered = $this->factory->registerControllers('\ORM\Tests\Mock\AlternateController', 'alt');
        $this->assertEquals( '\ORM\Tests\Mock\AlternateController', $registered['alt']);
    }
    
    public function testGetAlternate() {
        $controller = $this->factory->get( 'owners' );
        $this->assertInstanceOf('\ORM\Tests\Mock\AlternateController\Owners', $controller);
    }
    
    /**
     * @expectedException \ORM\Exceptions\ControllerDoesNotExistException
     */
    public function testGetInvalid() {
        $this->factory->get( 'notacontrollers' );
    }
    
    /**
     * @expectedException \ORM\Exceptions\ControllerDoesNotExistException
     */
    public function testGetUnknown() {
        $this->factory->get( 'unknown' );
    }
    
    public function testGetDuplicateName() {
        $controller = $this->factory->get( 'alternate/cars' );
        $this->assertInstanceOf('\ORM\Tests\Mock\AlternateController\Cars', $controller);
        
        $controller = $this->factory->get( 'cars' );
        $this->assertInstanceOf('\ORM\Tests\Mock\Controller\Cars', $controller);
    }
    
    public function testUnregister() {
        $registered = $this->factory->registerControllers('\ORM\Tests\Mock\AlternateController', 'alt');
        
        $registered = $this->factory->unRegisterController('alt');
        $this->assertFalse( array_key_exists('alternatecontroller', $registered) );
        
        $registered = $this->factory->unRegisterController();
        $this->assertEquals( array(), $registered);
    }

}